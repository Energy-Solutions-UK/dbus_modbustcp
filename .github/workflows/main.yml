name: Compile and Build

on:
  workflow_dispatch:

jobs:
  my_job:
    name: Compile and build using SDK
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [ubuntu-latest]
        architecture: [x86_64]

    steps:
      - uses: actions/checkout@v2

      - name: Check Architecture
        run: |
          if [[ "${{ matrix.architecture }}" != "x86_64" ]]; then
            echo "Unsupported architecture. Exiting..."
            exit 1
          fi

      - name: download sdk
        run: wget https://updates.victronenergy.com/feeds/venus/release/sdk/venus-dunfell-x86_64-arm-cortexa8hf-neon-toolchain-v3.13.sh

      - name: change SDK permissions
        run: chmod u+x venus-dunfell-x86_64-arm-cortexa8hf-neon-toolchain-v3.13.sh
      
      - name: install sdk
        run: sudo ./venus-dunfell-x86_64-arm-cortexa8hf-neon-toolchain-v3.13.sh -y
      
      - name: create current directory
        run: mkdir -p /opt/venus/current

      - name: symlinks
        run: sudo ln -s /opt/venus/dunfell-arm-cortexa8hf-neon/* /opt/venus/current/

      - name: list the contents of the current directory
        run: sudo ls -la /opt/venus/current

      - name: use sdk
        run: . /opt/venus/current/environment-setup-cortexa8hf-neon-ve-linux-gnueabi

      # run helloworld.c
      - name: run helloworld.c
        run: gcc helloworld.c -o helloworld

      - name: Check helloworld binary
        run: |
          . /opt/venus/current/environment-setup-cortexa8hf-neon-ve-linux-gnueabi
          file helloworld

      # EXPECTED: helloworld: ELF 32-bit LSB  executable, ARM, EABI5 version 1 (SYSV), dynamically linked (uses shared libs), for GNU/Linux 2.6.16, not stripped
      # GOT: helloworld: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=62f2f36f9e1c9b6a401aef897df9605ca182ba86, for GNU/Linux 3.2.0, not stripped




      # - name: symlink qmake
      #   run: sudo ln -s /opt/venus/current/sysroots/x86_64-ve-linux/usr/bin/qmake /usr/bin/qmake

      # - name: remove make
      #   run: sudo rm /usr/bin/make

      # - name: symlink make
      #   run: sudo ln -s /opt/venus/current/sysroots/x86_64-ve-linux/usr/bin/make /usr/bin/make

      # # search for the location of qmake.conf in the /opt/venus/current/sysroots/x86_64-ve-linux/ directory and subdirectories
      # - name: search for qmake.conf
      #   run: find /opt/venus/current/sysroots/x86_64-ve-linux/ -name qmake.conf

      # - name: build project
      #   run: QMAKESPEC=/opt/venus/current/sysroots/x86_64-ve-linux/usr/lib/mkspecs/linux-g++ ./build.sh

